#!/usr/bin/env bash

set -o nounset
set -o errexit

BACKPORTS_PACKAGES="wifi" # wwan nfc ieee802154 media


# Check for linux-headers
if [ ! -e "/lib/modules/$(uname -r)/build" ]; then
	echo "ERROR: Linux kernel headers are not installed"
	exit 1
fi


# Check for already installed backports drivers, gracefully quit if found
echo "Checking for installed backports drivers ..."
KERNEL_BASE=$(echo $(uname -r) | sed -n "s/\([0-9]\+\.[0-9]\+\.[0-9]\+\).*/\1/p")
UPDATE_DRIVERS=$(find /lib/modules/$KERNEL_BASE*/updates/drivers -name *.ko 2> /dev/null || true)
for DRIVER in $UPDATE_DRIVERS; do
	DRIVER_MODINFO=$(modinfo -F version "$DRIVER" | grep "using backports v")
	if [ "$DRIVER_MODINFO" != "" ]; then
		DRIVER_FOLDER=$(echo "$DRIVER" | sed -n "s/\(.\+\/drivers\/\).*/\1/p")
		echo "   Found: $DRIVER_FOLDER"
		exit 0
	fi
done
echo "   Did not find any drivers"
echo ""


# Download the latest stable (non-RC) version
cd /usr/src
sudo rm -rf backports*/ > /dev/null
sudo rm -f backports* > /dev/null
echo "Finding latest stable version ..."
BACKPORT_VER=$(wget https://www.kernel.org/pub/linux/kernel/projects/backports/stable/ -qq -O - | sed -n "s/.*href=\"\([^\"\/]\+\).*/\1/p" | egrep "v[0-9]+\.[0-9]+" | grep -v rc | sort -V | tail -1)
echo "   $BACKPORT_VER"
BACKPORT_FILE=$(wget https://www.kernel.org/pub/linux/kernel/projects/backports/stable/$BACKPORT_VER/ -qq -O - | sed -n "s/.*href=\"\([^\"\/]\+\).*/\1/p" | egrep "\.tar\.(bz2|gz|xz)" | sort -V | tail -1)
BACKPORT_URL="https://www.kernel.org/pub/linux/kernel/projects/backports/stable/$BACKPORT_VER/$BACKPORT_FILE"
echo "Downloading $BACKPORT_FILE ..."
sudo wget -q -O "$BACKPORT_FILE" "$BACKPORT_URL" > /dev/null
if [ ! -e "$BACKPORT_FILE" ]; then
	echo "   Download failed"
	exit 1
fi

# Extract archive
echo "Extracting $BACKPORT_FILE ..."
sudo tar xf "$BACKPORT_FILE" > /dev/null
sudo rm -f "$BACKPORT_FILE" > /dev/null
if [ ! -e "${BACKPORT_FILE%.tar.*}/Makefile" ]; then
	echo "   Extract failed"
	exit 1
fi

echo ""


# Build backports
cd "${BACKPORT_FILE%.tar.*}"
echo "Running make uninstall ..."
sudo make uninstall > /dev/null
echo "Running make mrproper ..."
sudo make mrproper > /dev/null
echo ""
for PACKAGE in $BACKPORTS_PACKAGES; do
	echo "Building $PACKAGE ..."
	sudo make defconfig-$PACKAGE > /dev/null
	sudo make > /dev/null
	sudo make install > /dev/null
done
echo ""